import{d as n,m as a,U as p,u as l,_ as h,k as c,r as d,o as m}from"./index-DJnqFb91.js";import{W as u,P as _}from"./PlayerController-DP7DmjNK.js";import{u as f}from"./ChannelsStore-Dfb6wZak.js";import{u as y}from"./CaptureManager-D8wBIW2O.js";import"./ssrBoot-DvxYJLiV.js";import"./VCard-CCKEmTaz.js";import"./VRow-B2wsbuYS.js";import"./VDialog-DAC-RvNQ.js";import"./VOverlay-BcNliwIL.js";import"./forwardRefs-B931MWyl.js";import"./dialog-transition-CY4dbePS.js";import"./VSwitch-D2sK-9NJ.js";import"./VTextField-BzKJGGL0.js";import"./VSlider-DyClbt-v.js";import"./swiper-BJe2OGri.js";import"./index-BnYEBiLN.js";import"./CommentMuteSettings--6huL9N0.js";import"./VSelect-BEmwMWVE.js";import"./VDivider-TTn6AwhD.js";import"./manager-B_l_qcot.js";import"./Videos-y6WHFsfm.js";import"./PlayerUtils-BfTyTGZ4.js";import"./vuedraggable.umd-D8tYCO_0.js";import"./Twitter-5ynhFRak.js";import"./Captures-CWH_yI2r.js";let e=null;const S=n({name:"TV-Watch",components:{Watch:u},data(){return{interval_ids:[]}},computed:{...a(f,y,l)},created(){this.channelsStore.display_channel_id=this.$route.params.display_channel_id,this.init()},beforeRouteUpdate(t,s,r){const i=this.destroy();this.channelsStore.display_channel_id=t.params.display_channel_id,(async()=>this.playerStore.is_zapping===!0?(this.playerStore.is_zapping=!1,this.interval_ids.push(window.setTimeout(()=>{i.then(()=>this.init())},.5*1e3))):i.then(()=>this.init()))(),r()},beforeUnmount(){this.destroy(),this.channelsStore.display_channel_id="gr000"},methods:{async init(){const t=60-new Date().getSeconds();if(this.interval_ids.push(window.setTimeout(()=>{this.channelsStore.update(!0),this.interval_ids.push(window.setInterval(()=>{this.channelsStore.update(!0)},30*1e3))},t*1e3)),await this.channelsStore.update(),this.$route.params.display_channel_id===void 0){this.$router.push({path:"/not-found/"});return}if(this.channelsStore.channel.current.name==="チャンネル情報取得エラー"){await p.sleep(3),this.$router.push({path:"/not-found/"});return}e=new _("Live"),await e.init()},async destroy(){for(const t of this.interval_ids)window.clearInterval(t);this.interval_ids=[],e!==null&&(await e.destroy(),e=null)}}});function w(t,s,r,i,v,$){const o=d("Watch",!0);return m(),c(o,{playback_mode:"Live"})}const M=h(S,[["render",w]]);export{M as default};
