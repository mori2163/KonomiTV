var S=Object.defineProperty;var $=(_,e,s)=>e in _?S(_,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):_[e]=s;var b=(_,e,s)=>$(_,typeof e!="symbol"?e+"":e,s);import{a2 as E,dc as F,aZ as c,U as D,d6 as P,B as O}from"./index-DJnqFb91.js";import{V as z}from"./Videos-y6WHFsfm.js";const N="playlist.m3u8",k="segment-",q=".ts",w=class w{constructor(){b(this,"activeDownloads",new Map);b(this,"initialized",!1)}static getInstance(){return w.instance===null&&(w.instance=new w),w.instance}async initialize(){if(this.initialized===!0)return;const e=E();if(await e.initialize(),e.initialization_error!==null)throw new Error(e.initialization_error);this.initialized=!0}async startDownload(e,s){var u;await this.initialize();const a=E();if(a.storage_backend===null)throw new Error("Offline storage backend is not available.");const o=crypto.randomUUID(),i=crypto.randomUUID(),n=s.isHevc===!0?`${s.quality}-hevc`:s.quality,r=new Date().toISOString(),l=new AbortController;this.activeDownloads.set(o,l);let t={id:o,video_id:e.id,quality:s.quality,is_hevc:s.isHevc,save_comments:s.saveComments,storage_backend:a.storage_backend,status:"downloading",recorded_program:F(e),target_duration:0,segment_count:0,segments:[],total_size:0,downloaded_bytes:0,created_at:r,updated_at:r,playlist_path:N,has_thumbnail:!1};await c.putMetadata(t),a.upsertDownload(t);try{const m=await this.fetchPlaylist(e.id,n,i,l),g=this.parsePlaylist(m);if(g.segments.length===0)throw new Error("Playlist does not contain any segments.");const I=this.buildOfflinePlaylist(m,t.id,g.segments);t={...t,target_duration:g.targetDuration,segment_count:g.segments.length,segments:g.segments},await c.updateMetadata(t.id,{target_duration:t.target_duration,segment_count:t.segment_count,segments:t.segments}),a.upsertDownload(t),await c.writePlaylist(t,I);const y={id:t.id,downloaded_segments:0,downloaded_bytes:0,total_segments:t.segment_count};a.setProgress(y);const M=g.cacheKey;for(const d of g.segments){if(l.signal.aborted===!0)throw new DOMException("Download aborted.","AbortError");const f=await this.fetchSegment(e.id,n,i,M,d.sequence,l);await c.writeSegment(t,d.sequence,f),t={...t,downloaded_bytes:t.downloaded_bytes+f.byteLength,total_size:t.total_size+f.byteLength,updated_at:new Date().toISOString()},await c.updateMetadata(t.id,{downloaded_bytes:t.downloaded_bytes,total_size:t.total_size}),a.upsertDownload(t),y.downloaded_segments+=1,y.downloaded_bytes=t.downloaded_bytes,a.setProgress({...y})}if(s.saveComments===!0)try{const d=await z.fetchVideoJikkyoComments(e.id);if(d.is_success&&d.comments.length>0){const f=(u=e.recorded_video)==null?void 0:u.recording_start_time;if(f===null)console.warn("[OfflineDownloadManager] recording_start_time is null, cannot calculate comment times.");else{const h=d.comments.map(p=>({text:p.text,time:D.apply28HourClock(P(f).add(p.time,"seconds").format("MM/DD HH:mm:ss")),playback_position:p.time,user_id:p.author}));await c.writeComments(t.id,h),console.log(`[OfflineDownloadManager] Saved ${h.length} comments for download ${t.id}`)}}else console.log(`[OfflineDownloadManager] No comments available for video ${e.id}`)}catch(d){console.warn("[OfflineDownloadManager] Failed to save comments, but continuing.",d)}try{const f=`${D.api_base_url}/api/videos/${e.recorded_video.id}/thumbnail`,h=await fetch(f,{signal:l.signal});if(h.ok===!0){const p=await h.blob();await c.writeThumbnail(t.id,p),t={...t,has_thumbnail:!0},await c.updateMetadata(t.id,{has_thumbnail:!0}),a.upsertDownload(t),console.log(`[OfflineDownloadManager] Saved thumbnail for download ${t.id}`)}else console.warn(`[OfflineDownloadManager] Failed to fetch thumbnail: ${h.status}`)}catch(d){console.warn("[OfflineDownloadManager] Failed to save thumbnail, but continuing.",d)}return t={...t,status:"completed",updated_at:new Date().toISOString()},await c.updateMetadata(t.id,{status:"completed"}),a.upsertDownload(t),a.clearProgress(t.id),t}catch(m){throw console.error("[OfflineDownloadManager] Failed to download offline content.",m),t={...t,status:l.signal.aborted?"paused":"error",updated_at:new Date().toISOString()},await c.updateMetadata(t.id,{status:t.status}),a.upsertDownload(t),m}finally{this.activeDownloads.delete(o)}}cancelDownload(e){const s=this.activeDownloads.get(e);s!==void 0&&s.abort()}async fetchPlaylist(e,s,a,o){const i=await O.get(`/streams/video/${e}/${s}/playlist`,{params:{session_id:a},responseType:"text",signal:o.signal,transformResponse:n=>n});if(i.type==="error"){const n=this.getErrorMessage(i.data.detail,"Failed to fetch playlist.");throw new Error(n)}return i.data}async fetchSegment(e,s,a,o,i,n){const r=await O.get(`/streams/video/${e}/${s}/segment`,{params:{session_id:a,sequence:i,cache_key:o??void 0},responseType:"arraybuffer",signal:n.signal});if(r.type==="error"){const l=this.getErrorMessage(r.data.detail,"Failed to fetch segment.");throw new Error(l)}return r.data}parsePlaylist(e){var r;const s=e.split(`
`),a=[];let o=0,i=0,n=null;for(const l of s){const t=l.trim();if(t.length!==0){if(t.startsWith("#EXT-X-TARGETDURATION:")){const u=t.split(":")[1];o=Number.parseInt(u,10)||0;continue}if(t.startsWith("#EXTINF:")){const u=(r=t.split(":")[1])==null?void 0:r.split(",")[0];i=Number.parseFloat(u??"0");continue}if(t.startsWith("segment?")===!0){const u=new URL(t,`${D.api_base_url}/`),m=u.searchParams.get("sequence");if(m===null)throw new Error(`Playlist segment missing sequence parameter: ${t}`);const g={sequence:Number.parseInt(m,10),duration:i};a.push(g),i=0,n===null&&(n=u.searchParams.get("cache_key"));continue}}}return{targetDuration:o,cacheKey:n,segments:a}}buildOfflinePlaylist(e,s,a){const o=e.split(`
`),i=[];let n=0;for(const r of o)if(r.trim().startsWith("segment?")===!0){if(n>=a.length)throw new Error(`Playlist mismatch: more segment lines (${n+1}) than parsed segments (${a.length})`);const l=a[n],t=`${k}${l.sequence.toString().padStart(8,"0")}${q}`;i.push(`/offline/streams/${s}/segments/${t}`),n+=1}else i.push(r);return i.join(`
`)}getErrorMessage(e,s){if(typeof e=="string")return e;if(Array.isArray(e)===!0&&e.length>0){const a=e[0];if(a!==void 0&&typeof a.msg=="string")return a.msg}return s}};b(w,"instance",null);let v=w;const C=v.getInstance();export{C as O};
